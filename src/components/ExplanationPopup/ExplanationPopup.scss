@use "sass:color";
@use "../../styles/abstracts/variables" as *;
@use "../../styles/abstracts/mixins" as *;

.explanation-popup {
  --popup-padding: clamp(1.5rem, 4vw, 2.5rem);
  --border-radius: clamp(1rem, 2vw, 1.5rem);
  --backdrop-blur: 12px;
  --glow-strength: 0.8;
  --node-size: 2px;
  --line-color: #{color.adjust($color-bitcoin, $alpha: -0.85)};
  
  position: fixed;
  inset: 0;
  display: grid;
  place-items: center;
  padding: 1rem;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease-in-out;
  z-index: 1000;
  overflow: hidden;
  
  &.visible {
    opacity: 1;
    visibility: visible;
    
    .explanation-popup__content {
      transform: translateY(0) scale(1);
      opacity: 1;
    }
  }
  
  // Mempool-style background
  &::before {
    content: '';
    position: fixed;
    inset: -50%;
    background: 
      radial-gradient(
        circle at 30% 40%,
        color.adjust($color-bitcoin, $alpha: -0.92),
        transparent 40%
      ),
      radial-gradient(
        circle at 70% 60%,
        color.adjust($color-bitcoin, $alpha: -0.94),
        transparent 35%
      ),
      repeating-linear-gradient(
        45deg,
        transparent 0,
        transparent 10px,
        var(--line-color) 10px,
        var(--line-color) 11px
      ),
      repeating-linear-gradient(
        -45deg,
        transparent 0,
        transparent 10px,
        var(--line-color) 10px,
        var(--line-color) 11px
      );
    filter: blur(0.5px);
    opacity: 0.5;
    transform-origin: center;
    animation: backgroundMove 60s linear infinite;
    z-index: -2;
  }
  
  // Floating nodes effect
  &::after {
    content: '';
    position: fixed;
    inset: 0;
    background-image: 
      radial-gradient(
        circle at 10% 20%,
        var(--line-color) var(--node-size),
        transparent calc(var(--node-size) + 1px)
      ),
      radial-gradient(
        circle at 20% 80%,
        var(--line-color) var(--node-size),
        transparent calc(var(--node-size) + 1px)
      ),
      radial-gradient(
        circle at 30% 40%,
        var(--line-color) var(--node-size),
        transparent calc(var(--node-size) + 1px)
      ),
      radial-gradient(
        circle at 40% 60%,
        var(--line-color) var(--node-size),
        transparent calc(var(--node-size) + 1px)
      ),
      radial-gradient(
        circle at 60% 20%,
        var(--line-color) var(--node-size),
        transparent calc(var(--node-size) + 1px)
      ),
      radial-gradient(
        circle at 70% 50%,
        var(--line-color) var(--node-size),
        transparent calc(var(--node-size) + 1px)
      ),
      radial-gradient(
        circle at 80% 30%,
        var(--line-color) var(--node-size),
        transparent calc(var(--node-size) + 1px)
      ),
      radial-gradient(
        circle at 90% 90%,
        var(--line-color) var(--node-size),
        transparent calc(var(--node-size) + 1px)
      );
    background-size: 100% 100%;
    animation: nodesFloat 20s ease-in-out infinite alternate;
    z-index: -1;
  }

  &__content {
    position: relative;
    max-width: min(90vw, 600px);
    width: 100%;
    padding: var(--popup-padding);
    background: linear-gradient(
      135deg,
      color.adjust($color-background, $lightness: 12%, $alpha: 0.97),
      color.adjust($color-background, $lightness: 4%, $alpha: 0.97)
    );
    border-radius: var(--border-radius);
    transform: translateY(20px) scale(0.98);
    opacity: 0;
    transition: all 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
    overflow: hidden;
    
    // Glassmorphism
    backdrop-filter: blur(8px) brightness(1.1);
    box-shadow:
      0 20px 40px -10px rgba(0, 0, 0, 0.3),
      0 10px 20px -5px rgba(0, 0, 0, 0.2),
      0 0 0 1px color.adjust($color-bitcoin, $alpha: -0.9);
    
    // Gradient border
    &::before {
      content: '';
      position: absolute;
      inset: -1px;
      padding: 1px;
      background: linear-gradient(
        var(--rotate, 45deg),
        $color-bitcoin,
        transparent 60%
      );
      border-radius: inherit;
      mask: 
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
      -webkit-mask: 
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
      -webkit-mask-composite: xor;
      mask-composite: exclude;
      opacity: var(--glow-strength);
      animation: rotateGradient 8s linear infinite;
    }
  }
}

.explanation-header {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  margin-bottom: 1.5rem;
  position: relative;
  
  h2 {
    margin: 0;
    padding-right: 2.5rem;
    font-size: clamp(1.5rem, 4vw, 2rem);
    font-weight: 700;
    background: linear-gradient(
      135deg,
      $color-bitcoin,
      color.adjust($color-bitcoin, $lightness: 20%)
    );
    background-clip: text;
    -webkit-background-clip: text;
    color: transparent;
    text-shadow: 
      0 2px 4px rgba(0, 0, 0, 0.1),
      0 4px 8px rgba(0, 0, 0, 0.1);
  }
}

.explanation-body {
  p {
    margin: 0 0 1.25rem;
    font-size: clamp(1rem, 2.5vw, 1.125rem);
    line-height: 1.6;
    color: color.adjust($color-text, $alpha: -0.1);
    
    strong {
      color: $color-bitcoin;
      font-weight: 600;
    }
  }
}

.explanation-controls {
  display: flex;
  justify-content: flex-end;
  margin-top: 1rem;
}

.close-button {
  position: absolute;
  top: 0;
  right: 0;
  width: 28px;
  height: 28px;
  padding: 0.4rem;
  border: none;
  border-radius: 50%;
  background: color.adjust($color-background, $lightness: 10%, $alpha: 0.8);
  color: color.adjust($color-text, $alpha: -0.3);
  cursor: pointer;
  transition: all 0.3s ease;
  display: grid;
  place-items: center;
  
  &:hover {
    background: color.adjust($color-background, $lightness: 15%, $alpha: 0.9);
    color: $color-text;
    transform: rotate(90deg);
  }
  
  svg {
    width: 16px;
    height: 16px;
  }
}

@keyframes rotateGradient {
  from { --rotate: 0deg; }
  to { --rotate: 360deg; }
}

@keyframes backgroundMove {
  0% {
    transform: rotate(0) scale(1.5);
  }
  50% {
    transform: rotate(180deg) scale(2);
  }
  100% {
    transform: rotate(360deg) scale(1.5);
  }
}

@keyframes nodesFloat {
  0% {
    background-position: 
      0% 0%,
      20% 20%,
      40% 40%,
      60% 60%,
      80% 80%,
      100% 100%;
    opacity: 0.3;
  }
  50% {
    opacity: 0.6;
  }
  100% {
    background-position: 
      10% 10%,
      30% 30%,
      50% 50%,
      70% 70%,
      90% 90%,
      100% 100%;
    opacity: 0.3;
  }
}
