@use "sass:color";
@use "sass:math";
@use "../../styles/abstracts/variables" as *;
@use "../../styles/abstracts/mixins" as *;

// Custom properties
:root {
  --button-size: clamp(44px, 5vw, 48px);
  --icon-size: calc(var(--button-size) * 0.5);
  --glow-strength: 0.7;
  --animation-timing: cubic-bezier(0.165, 0.84, 0.44, 1);
}

.speaker-controls {
  display: inline-flex;
  align-items: center;
  gap: 1rem;
  position: relative;
}

.speaker-button {
  --button-size: clamp(44px, 5vw, 48px);
  --icon-size: calc(var(--button-size) * 0.5);
  
  position: relative;
  width: var(--button-size);
  height: var(--button-size);
  padding: 0;
  border: none;
  border-radius: 50%;
  background: color.adjust($color-bitcoin, $alpha: -0.92);
  color: $color-bitcoin;
  cursor: pointer;
  transition: all 0.3s var(--animation-timing);
  isolation: isolate;
  
  // Glassmorphism effect
  backdrop-filter: blur(4px);
  box-shadow: 
    0 0 0 1px color.adjust($color-bitcoin, $alpha: -0.8),
    0 2px 8px color.adjust($color-bitcoin, $alpha: -0.9);
  
  // Hover effect
  &:hover {
    background: color.adjust($color-bitcoin, $alpha: -0.85);
    transform: translateY(-2px) scale(1.05);
    box-shadow: 
      0 0 0 1px color.adjust($color-bitcoin, $alpha: -0.7),
      0 4px 12px color.adjust($color-bitcoin, $alpha: -0.8),
      0 0 20px color.adjust($color-bitcoin, $alpha: -0.9);
      
    svg {
      transform: scale(1.1);
    }
  }
  
  &:active {
    transform: translateY(1px) scale(0.95);
  }
  
  // Playing state
  &.playing {
    background: color.adjust($color-bitcoin, $alpha: -0.8);
    animation: pulseGlow 2s var(--animation-timing) infinite;
    
    &::before {
      opacity: 0.2;
    }
  }
  
  // Sound wave effect
  &::before {
    content: '';
    position: absolute;
    inset: -4px;
    border-radius: 50%;
    background: radial-gradient(
      circle at center,
      $color-bitcoin,
      transparent 70%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
  }
  
  // Icon styling
  svg {
    width: var(--icon-size);
    height: var(--icon-size);
    transition: transform 0.3s var(--animation-timing);
    
    path, polygon, line {
      transition: all 0.3s var(--animation-timing);
    }
  }
  
  // Unsupported state
  &.unsupported {
    opacity: 0.5;
    cursor: not-allowed;
    
    &:hover {
      transform: none;
      background: color.adjust($color-bitcoin, $alpha: -0.92);
    }
  }
}

// Sound wave animation
@keyframes pulseGlow {
  0% {
    box-shadow: 
      0 0 0 1px color.adjust($color-bitcoin, $alpha: -0.7),
      0 2px 8px color.adjust($color-bitcoin, $alpha: -0.8),
      0 0 0 rgba($color-bitcoin, 0);
  }
  50% {
    box-shadow: 
      0 0 0 1px color.adjust($color-bitcoin, $alpha: -0.6),
      0 4px 12px color.adjust($color-bitcoin, $alpha: -0.7),
      0 0 20px rgba($color-bitcoin, 0.2);
  }
  100% {
    box-shadow: 
      0 0 0 1px color.adjust($color-bitcoin, $alpha: -0.7),
      0 2px 8px color.adjust($color-bitcoin, $alpha: -0.8),
      0 0 0 rgba($color-bitcoin, 0);
  }
}

// Playing state animations
.playing {
  svg {
    path {
      &:nth-of-type(1) {
        animation: soundWave 1.2s ease-in-out infinite;
      }
      &:nth-of-type(2) {
        animation: soundWave 1.2s ease-in-out infinite 0.2s;
      }
    }
  }
}

@keyframes soundWave {
  0%, 100% {
    stroke-width: 2;
    opacity: 1;
  }
  50% {
    stroke-width: 3;
    opacity: 0.5;
  }
}

.voice-select {
  background-color: color.adjust($color-background, $lightness: 10%);
  color: $color-text;
  border: 1px solid rgba($color-bitcoin, 0.3);
  border-radius: $border-radius-medium;
  padding: 4px 8px;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.3s ease;
  max-width: 200px;

  &:hover, &:focus {
    border-color: $color-bitcoin;
    outline: none;
  }

  option {
    background-color: $color-background;
    color: $color-text;
    padding: 4px;
  }
}
